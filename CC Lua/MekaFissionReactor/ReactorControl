local MIN_THRESHOLD = 0.2
local MAX_THRESHOLD = 0.8
 
print("Software Control is On...")
local reactor = peripheral.wrap("peripheralProxy:fissionReactor_0")
local im = peripheral.wrap("peripheralProxy:inductionMaxtrix_0")
local turbine = peripheral.wrap("peripheralProxy:turbine_0") --Find out the proper name
local monitor = peripheral.wrap("right")

local MAX_ENERGY = im.getMaxEnergy()

local MAX_COOLANT = reactor.getCoolantCapacity()
local MAX_FUEL = reactor.getFuelCapacity()

local MAX_HEATEDCOOLANT = reactor.getHeatedCoolantCapacity()
local MAX_WASTE = reactor.getWasteCapacity()

local MIN_DAMAGE = 100
local MAX_TEMPERATURE = reactor.getHeatCapacity()

if (reactor.getStatus()) then
    reactor.scram()
end

rednet.open("left")
print("Rednet Open")

while(true) do
    local currentEnergy = im.getEnergy()
    local currentEnergyPercentage = im.getEnergyFilledPercentage()

    local currentCoolant = reactor.getCoolant()
    local currentCoolantPercentage = reactor.getCoolantFilledPercentage()

    local currentFuel = reactor.getFuel()
    local currentFuelPercentage = reactor.getFuelFilledPercentage()

    local currentHeatedCoolant = reactor.getHeatedCoolant()
    local currentHeatedCoolantPercentage = reactor.getHeatedCoolantFilledPercentage()
    
    local currentWaste = reactor.getWaste()
    local currentWastePercentage = reactor.getWasteFilledPercentage()

    local currentDamage = MIN_DAMAGE - reactor.getDamagePercent()
    
    local temperature = reactor.getTemperature()



    local status = (reactor.getStatus() and "Active" or "Inactive")

    if(currentEnergyPercentage > MAX_THRESHOLD) then
        print("Shutting Down: Energy " .. currentEnergy .. "/" .. MAX_ENERGY)
        reactor.scram()
    elseif(currentCoolantPercentage < MIN_THRESHOLD) then
        print("Shutting Down: Coolant " .. currentCoolant .. "/" .. MAX_COOLANT)
        reactor.scram()
    elseif(currentFuelPercentage < MIN_THRESHOLD) then
        print("Shutting Down: Fuel " .. currentFuel .. "/" .. MAX_FUEL)
        reactor.scram()
    elseif(currentHeatedCoolantPercentage > MIN_THRESHOLD) then
        print("Shutting Down: Heated Coolant " .. currentHeatedCoolant .. "/" .. MAX_HEATEDCOOLANT)
        reactor.scram()
    elseif(currentWastePercentage > MIN_THRESHOLD) then
        print("Shutting Down: Waste " .. currentWaste .. "/" .. MAX_WASTE)
        reactor.scram()
    elseif(currentDamage < 100) then
        print("Shutting Down: Damage " .. currentDamage .. "/" .. 100)
        reactor.scram()
    elseif(temperature > MAX_TEMPERATURE) then
        print("Shutting Down: Temperature " .. temperature .. "/" .. MAX_TEMPERATURE)
        reactor.scram()
    elseif (currentEnergyPercentage < MIN_THRESHOLD) then
        reactor.activate()
    end
    
    rednet.broadcast(currentEnergyPercentage .. " " .. currentCoolantPercentage .. " " .. currentFuelPercentage .. " " .. currentHeatedCoolantPercentage .. " " .. currentWastePercentage .. " " .. currentDamage .. " " .. temperature .. " " .. status, "Fission1BC")
    sleep(.5)
end
